# Copyright (C) 2006-2009, The Perl Foundation.
# $Id$

# arguments we want to run parrot with
PARROT_ARGS =

# values from parrot_config
PARROT_BIN_DIR     = @bindir@
PARROT_VERSION     = @versiondir@
PARROT_INCLUDE_DIR = @includedir@$(PARROT_VERSION)
PARROT_LIB_DIR     = @libdir@$(PARROT_VERSION)
PARROT_SRC_DIR     = @srcdir@$(PARROT_VERSION)

CC            = @cc@
CFLAGS        = @ccflags@ @cc_shared@ @cc_debug@ @ccwarn@ @cc_hasjit@ @cg_flag@ @gc_flag@
EXE           = @exe@
LD            = @ld@
LDFLAGS       = @ldflags@ @ld_debug@
LD_LOAD_FLAGS = @ld_load_flags@
LIBPARROT     = @inst_libparrot_ldflags@
O             = @o@
LOAD_EXT      = @load_ext@
PERL          = @perl@
CP            = @cp@
MV            = @mv@
RM_F          = @rm_f@
CAT           = $(PERL) -MExtUtils::Command -e cat

# locations of parrot resources
PARROT           = $(PARROT_BIN_DIR)/parrot$(EXE)
PBC_TO_EXE       = $(PARROT_BIN_DIR)/pbc_to_exe$(EXE)
PARROT_TOOLS_DIR = $(PARROT_LIB_DIR)/tools
PARROT_PERL_LIB  = $(PARROT_TOOLS_DIR)/lib
PERL6GRAMMAR_PBC = $(PARROT_LIB_DIR)/library/PGE/Perl6Grammar.pbc
NQP_PBC          = $(PARROT_LIB_DIR)/languages/nqp/nqp.pbc
PMC2C            = $(PERL) $(PARROT_TOOLS_DIR)/build/pmc2c.pl
PMC2C_INCLUDES   = --include src/pmc --include $(PARROT_SRC_DIR) --include $(PARROT_SRC_DIR)/pmc --include include/ocarrot
CINCLUDES        = -I$(PARROT_INCLUDE_DIR) -I$(PARROT_INCLUDE_DIR)/pmc -I$(PWD)/include/ocarrot -I.
LINKARGS         = $(LDFLAGS) $(LD_LOAD_FLAGS) $(LIBPARROT) @libs@ @icu_shared@

# Various paths
PMC_DIR       = src/pmc

SOURCES = ocarrot.pir \
  src/gen_grammar.pir \
  src/gen_actions.pir \
  src/parrot/Compiler.pir \
  runtime/ocarrot.pir \
  $(DYNPMC) \
#  src/gen_builtins.pir

BUILTINS_PIR = # \

PMCS        = caml_value caml_block caml_float caml_string caml_array
PMC_SOURCES = $(PMC_DIR)/caml_value.pmc \
	      $(PMC_DIR)/caml_block.pmc \
	      $(PMC_DIR)/caml_float.pmc \
	      $(PMC_DIR)/caml_string.pmc \
	      $(PMC_DIR)/caml_array.pmc
GROUP       = ocarrot_group
DYNPMC      = $(PMC_DIR)/$(GROUP)$(LOAD_EXT)

CLEANUPS = \
  ocarrot.pbc \
  ocarrot.c \
  ocarrot$(O) \
  ocarrot$(EXE) \
  src/gen_grammar.pir \
  src/gen_actions.pir \
  src/gen_builtins.pir \
  $(PMC_DIR)/*.h \
  $(PMC_DIR)/*.c \
  $(PMC_DIR)/*.dump \
  $(PMC_DIR)/*$(O) \
  $(PMC_DIR)/*$(LOAD_EXT) \
  $(PMC_DIR)/*.exp \
  $(PMC_DIR)/*.ilk \
  $(PMC_DIR)/*.manifest \
  $(PMC_DIR)/*.pdb \
  $(PMC_DIR)/*.lib \

# NOTE: eventually, we should remove --keep-exit-code and --fudge
#       as the goal is that all tests must pass without fudge
HARNESS_WITH_FUDGE = $(PERL) t/harness --fudge --keep-exit-code
HARNESS_WITH_FUDGE_JOBS = $(HARNESS_WITH_FUDGE) --jobs


# the default target
all: ocarrot$(EXE)

# targets for building a standalone ocarrot
ocarrot$(EXE): ocarrot.pbc
	$(PBC_TO_EXE) ocarrot.pbc
	@win32_libparrot_copy@

ocarrot.pbc: $(SOURCES)
	$(PARROT) $(PARROT_ARGS) -o ocarrot.pbc ocarrot.pir runtime/ocarrot.pir

src/gen_grammar.pir: $(PERL6GRAMMAR_PBC) src/parser/grammar.pg
	$(PARROT) $(PARROT_ARGS) $(PERL6GRAMMAR_PBC) \
	    --output=src/gen_grammar.pir \
	    src/parser/grammar.pg

src/gen_actions.pir: $(NQP_PBC) src/parser/actions.pm
	$(PARROT) $(PARROT_ARGS) $(NQP_PBC) --output=src/gen_actions.pir \
	    --target=pir src/parser/actions.pm

src/gen_builtins.pir: $(BUILTINS_PIR)
	$(CAT) $(BUILTINS_PIR) >src/gen_builtins.pir

# Building PMCs
src/pmc/%.dump: src/pmc/%.pmc
	$(PMC2C) --no-lines --dump $(PMC2C_INCLUDES) $<

src/pmc/caml_block.dump:  src/pmc/caml_block.pmc  src/pmc/caml_value.dump
src/pmc/caml_float.dump:  src/pmc/caml_float.pmc  src/pmc/caml_block.dump
src/pmc/caml_string.dump: src/pmc/caml_string.pmc src/pmc/caml_block.dump
src/pmc/caml_array.dump:  src/pmc/caml_array.pmc  src/pmc/caml_block.dump

$(DYNPMC): $(PMC_SOURCES:.pmc=.dump)
	# TODO Generate C files in the same way as .dump files.
	$(PMC2C) --no-lines --c $(PMC2C_INCLUDES) $(PMC_SOURCES)
	# TODO use $(PMC_SOURCES) instead of "*.pmc"
	cd $(PMC_DIR) && $(PMC2C) --no-lines --library $(GROUP) --c *.pmc
	cd $(PMC_DIR) && $(CC) -c @cc_o_out@$(GROUP)$(O) $(CINCLUDES) $(CFLAGS) $(GROUP).c
	cd $(PMC_DIR) && $(CC) -c $(CINCLUDES) $(CFLAGS) *.c
	cd $(PMC_DIR) && $(LD) @ld_out@$(GROUP)$(LOAD_EXT) *$(O) $(LINKARGS)

# This is a listing of all targets, that are meant to be called by users
help:
	@echo ""
	@echo "Following targets are available for the user:"
	@echo ""
	@echo "  all:               ocarrot.pbc"
	@echo "                     This is the default."
	@echo "Testing:"
	@echo "  test:              Run the test suite."
	@echo ""
	@echo "Cleaning:"
	@echo "  clean:             Basic cleaning up."
	@echo "  realclean:         Removes also files generated by 'Configure.pl'"
	@echo "  distclean:         Same as realclean."
	@echo ""
	@echo "Misc:"
	@echo "  help:              Print this help message."
	@echo ""

test: all
	$(PERL) t/harness

##  cleaning
clean:
	$(RM_F) $(CLEANUPS)

realclean: clean
	$(RM_F) Makefile

distclean: realclean
